{"timestamp": 1720392383.326066, "stored_source_code": "product = None\nupstream = None\nmd_reference_data = None\n# Contact analysis for Rubisco Extant protein complexes\nimport MDAnalysis as mda\n#from MDAnalysis.tests.datafiles import TPR, XTC\nfrom MDAnalysis.analysis import density\nfrom MDAnalysis.analysis import rdf\nfrom MDAnalysis.analysis import contacts\nimport prody as pdy\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport json\nimport seaborn as sns\nimport math\ndef contacts_within_cutoff(u, group_a, group_b, radius=6.0):\n    timeseries = []\n    for ts in u.trajectory:\n        dist = contacts.distance_array(group_a.positions, group_b.positions)\n        n_contacts = contacts.contact_matrix(dist, radius).sum()\n        timeseries.append([ts.frame, n_contacts])\n    return np.array(timeseries)\nlsu_chains = ['A','E','I','M','C','G','K','O']\nssu_chains = ['B','F','J','N','D','H','L','P']\ndef average_gas_per_subunit(pdb_file, dcd_file, gas, atom, conc):\n    env = mda.Universe(pdb_file, dcd_file, frames=\"all\")\n    prot_lsu_atoms = env.select_atoms('protein').select_atoms('name CA and (segid A or segid E or segid I or segid M or segid C or segid G or segid K or segid O)')     # This is the annotation for 8RUC reference structure we have\n    prot_ssu_atoms = env.select_atoms('protein').select_atoms('name CA and (segid B or segid F or segid J or segid N or segid D or segid H or segid L or segid P)')\n    gas_atoms = env.select_atoms('resname ' + gas).select_atoms('name ' + atom)\n\n    ca_lsu = contacts_within_cutoff(env, gas_atoms, prot_lsu_atoms, radius=6.0)\n    ca_lsu_df = pd.DataFrame(ca_lsu, columns=['Frame', '# Contacts'])\n\n    ca_ssu = contacts_within_cutoff(env, gas_atoms, prot_ssu_atoms, radius=6.0)\n    ca_ssu_df = pd.DataFrame(ca_ssu, columns=['Frame', '# Contacts'])\n\n    avg_val_lsu = sum(ca_lsu_df['# Contacts'][249:749])/len(prot_lsu_atoms)\n    avg_val_ssu = sum(ca_ssu_df['# Contacts'][249:749])/len(prot_ssu_atoms)\n\n    return(avg_val_lsu, avg_val_ssu)\ndef average_gas_per_individual_subunit(pdb_file, dcd_file, gas, atom, conc):\n    \n    env = mda.Universe(pdb_file, dcd_file, frames=\"all\")\n    gas_atoms = env.select_atoms('resname ' + gas).select_atoms('name ' + atom)\n\n    li_ca_lsu = []\n    for id in lsu_chains:\n        prot_lsu_atoms = env.select_atoms('protein').select_atoms('name CA and segid ' + id)\n        ca_lsu = contacts_within_cutoff(env, gas_atoms, prot_lsu_atoms, radius=6.0)\n        ca_lsu_df = pd.DataFrame(ca_lsu, columns=['Frame', '# Contacts'])\n        avg_val_lsu = sum(ca_lsu_df['# Contacts'][249:749])/len(prot_lsu_atoms)\n        li_ca_lsu.append(avg_val_lsu)\n        \n    li_ca_ssu = []\n    for id in ssu_chains:\n        prot_ssu_atoms = env.select_atoms('protein').select_atoms('name CA and segid ' + id)\n        ca_ssu = contacts_within_cutoff(env, gas_atoms, prot_ssu_atoms, radius=6.0)\n        ca_ssu_df = pd.DataFrame(ca_ssu, columns=['Frame', '# Contacts'])\n        try:\n            avg_val_ssu = sum(ca_ssu_df['# Contacts'][249:749])/len(prot_ssu_atoms)\n        except ZeroDivisionError:\n            avg_val_ssu = 0\n        li_ca_ssu.append(avg_val_ssu)\n\n    return(li_ca_lsu, li_ca_ssu)\navergage_gas_per_indvidual_subunit_contacts = []\npath = '../../../simulations/'\n\ndef central_atom(gas):\n    if gas == 'CO2':\n        return 'C1'\n    elif gas == 'MO2':\n        return 'O1'\n\nfor entry in md_reference_data:\n    print(entry['code'])\n\n    contacts_lsu, contacts_ssu = average_gas_per_individual_subunit(\n        path + entry['dry_pdb'], \n        path + entry['dry_dcd'], \n        entry['gas'], \n        central_atom(entry['gas']), \n        entry['concentration']\n    )\n    for x in contacts_lsu:\n    \n        avergage_gas_per_indvidual_subunit_contacts.append(\n            dict(\n                code=entry['code'], gas=entry['gas'],\n                concentration=entry['concentration'],\n                contacts=x, subunit='lsu'\n            )\n        )\n    \n    for x in contacts_ssu:\n    \n        avergage_gas_per_indvidual_subunit_contacts.append(\n            dict(\n                code=entry['code'], gas=entry['gas'],\n                concentration=entry['concentration'],\n                contacts=x, subunit='ssu'\n            )\n        )\n\navergage_gas_per_indvidual_subunit_contacts = pd.DataFrame.from_records(\n    avergage_gas_per_indvidual_subunit_contacts\n)\ncol_set = {\"CO2\" : \"#ff5a5f\",  \"MO2\" : \"#86bbd8\"}\ng = sns.catplot(\n    data=avergage_gas_per_indvidual_subunit_contacts, \n    x='code', y='contacts', hue='gas', col='subunit',\n    palette=col_set, kind='bar'\n)\ng.set_ylabels('Gas contact per residue', fontname='Arial')\ng.axes[0, 0].set_ylim(0,250)\ng.axes[0, 1].set_ylim(0,250)\navergage_gas_per_indvidual_subunit_contacts.to_csv(\n    product['contacts_per_subunit'], index=None\n)\n# Calclulating Statiscs for comparing the gas contacts\n## Student t-test\nfrom scipy.stats import ttest_ind\nu = avergage_gas_per_indvidual_subunit_contacts.groupby(['code', 'subunit', 'gas']).apply(lambda x: list(x['contacts'])).reset_index().rename(columns={0:'contacts'}).pivot(\n    index=['code', 'subunit'], columns='gas', values='contacts'\n)\n# t_stat = ttest_ind(cc[cc.code.isin([var])]['value']\nu['t_test_pvalue'] = u.apply(\n    lambda x: ttest_ind(x['CO2'], x['MO2']).pvalue, axis=1\n)\nu\nu['t_test_statistic'] = u.apply(\n    lambda x: ttest_ind(x['CO2'], x['MO2']).statistic, axis=1\n)\n\nu['CO2_mean'] = u['CO2'].apply(np.mean)\nu['MO2_mean'] = u['MO2'].apply(np.mean)\nu['CO2_std'] = u['CO2'].apply(np.std)\nu['MO2_std'] = u['MO2'].apply(np.std)\n\nu.reset_index()[['code', 'subunit', 't_test_pvalue', 't_test_statistic', 'CO2_mean', 'MO2_mean', 'CO2_std', 'MO2_std']]", "params": {"code_palette": {"6ftl": "#5e93f5", "3zxw": "#976cd2", "8ruc": "#976cd2", "1bwv": "#75eda7", "6ura": "#91da48", "anciip": "gray", "anci": "gray", "anciab": "gray", "ancicd": "gray", "ancia": "gray", "ancib": "gray", "ancip": "gray"}, "md_reference_data": [{"code": "1bwv", "dry_dcd": "1bwv.exp02.md01.dry.dcd", "dry_pdb": "1bwv.exp02.md01.dry.pdb", "time": "extant", "gas": "CO2", "concentration": "400mM"}, {"code": "1bwv", "dry_dcd": "1bwv.exp04.md01.dry.dcd", "dry_pdb": "1bwv.exp04.md01.dry.pdb", "time": "extant", "gas": "MO2", "concentration": "400mM"}, {"code": "3zxw", "dry_dcd": "3zxw.exp02.md01.dry.dcd", "dry_pdb": "3zxw.exp02.md01.dry.pdb", "time": "extant", "gas": "CO2", "concentration": "400mM"}, {"code": "3zxw", "dry_dcd": "3zxw.exp04.md01.dry.dcd", "dry_pdb": "3zxw.exp04.md01.dry.pdb", "time": "extant", "gas": "MO2", "concentration": "400mM"}, {"code": "6ftl", "dry_dcd": "6ftl.exp02.md01.dry.dcd", "dry_pdb": "6ftl.exp02.md01.dry.pdb", "time": "extant", "gas": "CO2", "concentration": "400mM"}, {"code": "6ftl", "dry_dcd": "6ftl.exp04.md01.dry.dcd", "dry_pdb": "6ftl.exp04.md01.dry.pdb", "time": "extant", "gas": "MO2", "concentration": "400mM"}, {"code": "8ruc", "dry_dcd": "8ruc.exp02.md01.dry.dcd", "dry_pdb": "8ruc.exp02.md01.dry.pdb", "time": "extant", "gas": "CO2", "concentration": "400mM"}, {"code": "8ruc", "dry_dcd": "8ruc.exp04.md01.dry.dcd", "dry_pdb": "8ruc.exp04.md01.dry.pdb", "time": "extant", "gas": "MO2", "concentration": "400mM"}, {"code": "anci", "dry_dcd": "anci.exp02.md01.dry.dcd", "dry_pdb": "anci.exp02.md01.dry.pdb", "time": "ancient", "gas": "CO2", "concentration": "400mM"}, {"code": "anci", "dry_dcd": "anci.exp04.md01.dry.dcd", "dry_pdb": "anci.exp04.md01.dry.pdb", "time": "ancient", "gas": "MO2", "concentration": "400mM"}, {"code": "ancia", "dry_dcd": "ancia.exp02.md01.dry.dcd", "dry_pdb": "ancia.exp02.md01.dry.pdb", "time": "ancient", "gas": "CO2", "concentration": "400mM"}, {"code": "ancia", "dry_dcd": "ancia.exp04.md01.dry.dcd", "dry_pdb": "ancia.exp04.md01.dry.pdb", "time": "ancient", "gas": "MO2", "concentration": "400mM"}, {"code": "ancib", "dry_dcd": "ancib.exp02.md01.dry.dcd", "dry_pdb": "ancib.exp02.md01.dry.pdb", "time": "ancient", "gas": "CO2", "concentration": "400mM"}, {"code": "ancib", "dry_dcd": "ancib.exp04.md01.dry.dcd", "dry_pdb": "ancib.exp04.md01.dry.pdb", "time": "ancient", "gas": "MO2", "concentration": "400mM"}, {"code": "ancicd", "dry_dcd": "ancicd.exp02.md01.dry.dcd", "dry_pdb": "ancicd.exp02.md01.dry.pdb", "time": "ancient", "gas": "CO2", "concentration": "400mM"}, {"code": "ancicd", "dry_dcd": "ancicd.exp04.md01.dry.dcd", "dry_pdb": "ancicd.exp04.md01.dry.pdb", "time": "ancient", "gas": "MO2", "concentration": "400mM"}, {"code": "anciab", "dry_dcd": "anciab.exp02.md01.dry.dcd", "dry_pdb": "anciab.exp02.md01.dry.pdb", "time": "ancient", "gas": "CO2", "concentration": "400mM"}, {"code": "anciab", "dry_dcd": "anciab.exp04.md01.dry.dcd", "dry_pdb": "anciab.exp04.md01.dry.pdb", "time": "ancient", "gas": "MO2", "concentration": "400mM"}]}}